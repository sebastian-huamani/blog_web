<%- include("components/header") -%>
<%- include("components/nav") -%>

<div class="container">
    <h1 class="text-body-emphasis text-center my-5">U recorrido sobre C#</h1>
    <img src="https://i0.wp.com/www.latirus.com/blog/wp-content/uploads/2015/09/visual-studio-csharp.jpg?fit=1920%2C1080&ssl=1" alt="imagen_seguridad" class="home_section_img">
    
    <div class="row text-center my-4">
        <div class="col-6 row">
            <img src="imagenes/usuario/user1.jpg" alt="user1" class="col-2">
            <p class="col-2">Test Test 1</p>
        </div>
        <div class="col-6 row">
            <p class="col-4"><span>Leido: </span> 3000</p>
            <p class="col-4"><span>Tiempo de lectura: </span> 5 min</p>
            <p class="col-4"><span>Favoritos: </span> 30</p>
        </div>
    </div>
    <!-- <%= blogId %> -->
    <div class="container mb-5 text-center">
        <h3 class="my-5">¿Que es c#?</h3>
        
        <p class="text-justify">C# (pronunciado "si sharp" en inglés) es un lenguaje de programación moderno, basado en objetos y con seguridad de tipos. C# permite a los desarrolladores crear muchos tipos de aplicaciones seguras y sólidas que se ejecutan en .NET. C# tiene sus raíces en la familia de lenguajes C, y a los programadores de C, C++, Java y JavaScript les resultará familiar inmediatamente. Este paseo proporciona información general de los principales componentes del lenguaje en C# 8 y versiones anteriores. Si quiere explorar el lenguaje a través de ejemplos interactivos, pruebe los tutoriales de introducción a C#</p>

        <p>C# es un lenguaje de programación orientado a componentes, orientado a objetos. C# proporciona construcciones de lenguaje para admitir directamente estos conceptos, por lo que se trata de un lenguaje natural en el que crear y usar componentes de software. Desde su origen, C# ha agregado características para admitir nuevas cargas de trabajo y prácticas de diseño de software emergentes. En el fondo, C# es un lenguaje orientado a objetos. Defina los tipos y su comportamiento.</p>
        
        <h3 class="my-5">¿Cuáles son las características del lenguaje de programación C#?</h3>
        
        <p>No ha perdido la potencia original de C, es decir, se puede acceder a bajo nivel al núcleo de los sistemas operativos, trabajar con punteros a memoria (muchos desarrolladores tienen verdadero pánico a los punteros) e interactuar con elementos físicos de los dispositivos, como tarjetas gráficas o puertos USB, por ejemplo. De hecho, nunca antes fue tan sencillo trabajar con ficheros, soportando de forma nativa archivos XML.</p>

        <p></p>Además, como hemos comentado con anterioridad, C# es un lenguaje diseñado para su uso en .NET, cuyo objetivo de esta plataforma es crear aplicaciones de forma sencilla. Por tanto, este lenguaje se utiliza para diseñar aplicaciones en esta plataforma.</p>
        

        <p>Se hace hincapié en ello, ya que este lenguaje se diseñó expresamente para la plataforma .NET, por lo que las características de .NET serán las propias de este lenguaje de programación</p>

        <h3  class="my-5">Arquitectura de .NET</h3>

        <p>Los programas de C# se ejecutan en .NET, un sistema de ejecución virtual denominado Common Language Runtime (CLR) y un conjunto de bibliotecas de clases. CLR es la implementación de Microsoft del estándar internacional Common Language Infrastructure (CLI). CLI es la base para crear entornos de ejecución y desarrollo en los que los lenguajes y las bibliotecas funcionan juntos sin problemas.</p>
    </div>
</div>

<%- include("components/footer") -%>